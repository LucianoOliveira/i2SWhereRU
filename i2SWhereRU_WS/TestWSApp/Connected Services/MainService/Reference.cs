//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWSApp.MainService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/personExists", ReplyAction="http://tempuri.org/IMainService/personExistsResponse")]
        int personExists(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/personExists", ReplyAction="http://tempuri.org/IMainService/personExistsResponse")]
        System.Threading.Tasks.Task<int> personExistsAsync(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/getMapLocation", ReplyAction="http://tempuri.org/IMainService/getMapLocationResponse")]
        string getMapLocation(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/getMapLocation", ReplyAction="http://tempuri.org/IMainService/getMapLocationResponse")]
        System.Threading.Tasks.Task<string> getMapLocationAsync(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/getBeaconLocation", ReplyAction="http://tempuri.org/IMainService/getBeaconLocationResponse")]
        System.Collections.Generic.KeyValuePair<int, int> getBeaconLocation(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/getBeaconLocation", ReplyAction="http://tempuri.org/IMainService/getBeaconLocationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, int>> getBeaconLocationAsync(int personID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : TestWSApp.MainService.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<TestWSApp.MainService.IMainService>, TestWSApp.MainService.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int personExists(int personID) {
            return base.Channel.personExists(personID);
        }
        
        public System.Threading.Tasks.Task<int> personExistsAsync(int personID) {
            return base.Channel.personExistsAsync(personID);
        }
        
        public string getMapLocation(int personID) {
            return base.Channel.getMapLocation(personID);
        }
        
        public System.Threading.Tasks.Task<string> getMapLocationAsync(int personID) {
            return base.Channel.getMapLocationAsync(personID);
        }
        
        public System.Collections.Generic.KeyValuePair<int, int> getBeaconLocation(int personID) {
            return base.Channel.getBeaconLocation(personID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, int>> getBeaconLocationAsync(int personID) {
            return base.Channel.getBeaconLocationAsync(personID);
        }
    }
}
